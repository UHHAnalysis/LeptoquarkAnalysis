#include <iostream>

using namespace std;

// Local include(s):
#include "../include/TauIdCycle.h"


ClassImp( TauIdCycle );


TauIdCycle::TauIdCycle()
  : AnalysisCycle() 
{
  // constructor, declare additional variables that should be 
  // obtained from the steering-xml file
  
  // set the integrated luminosity per bin for the lumi-yield control plots
  SetIntLumiPerBin(25.); 
}



TauIdCycle::~TauIdCycle() 
{
  // destructor
}



void TauIdCycle::BeginCycle() throw( SError ) 
{  
  // Start of the job, general set-up and definition of 
  // objects are done here
  
  // Important: first call BeginCycle of base class
  AnalysisCycle::BeginCycle();
  return;
}



void TauIdCycle::EndCycle() throw( SError ) 
{
  // clean-up, info messages and final calculations after the analysis
  
   
  // call the base cycle class for all standard methods
  // and a summary of the made selections
  AnalysisCycle::EndCycle();
  return;
 }



void TauIdCycle::BeginInputData( const SInputData& id ) throw( SError ) 
{
  // Important: first call BeginInputData of base class
  AnalysisCycle::BeginInputData( id );
  // -------------------- set up the selections ---------------------------
  
  //Selection* bTagSel = new Selection("bTagSel");
    Selection* JetSel =  new Selection("JetSel");
    Selection* AntibTagSel = new Selection("AntibTagSel");
    Selection* InvMassSel  = new Selection("InvMassSel");
    Selection* RealTauSel  = new Selection("RealTauSel");
    Selection* TauSelection = new Selection("TauSelection");
    Selection* SameSignSel = new Selection("SameSignSel");

    //bTagSel -> addSelectionModule(new NBTagSelection(2,999,e_CSVL));
    JetSel -> addSelectionModule(new NJetSelection(2,999,30,2.5)); 
    InvMassSel -> addSelectionModule(new  TauMuonInvMassCut(80,100));
    AntibTagSel -> addSelectionModule(new NBTagSelection(1,999,e_CSVL));
    RealTauSel -> addSelectionModule(new GenTauSelection());
    TauSelection -> addSelectionModule(new NTauSelection(1,999,20,2.1));
    SameSignSel  -> addSelectionModule(new SameSignCut());
    
    //RegisterSelection(bTagSel);
    RegisterSelection(JetSel);
    RegisterSelection(AntibTagSel);
    RegisterSelection(InvMassSel);
    RegisterSelection(RealTauSel);
    RegisterSelection(TauSelection);
    RegisterSelection(SameSignSel);
  // ---------------- set up the histogram collections -------------------- 
  
//   RegisterHistCollection( new JetHists("JetsbTagSel"));
//   RegisterHistCollection( new TopJetHists("TopJetsbTagSel"));
//   RegisterHistCollection( new EventHists("EventsbTagSel"));
//   RegisterHistCollection( new MuonHists("MuonsbTagSel"));
//   RegisterHistCollection( new TauHists("TausbTagSel"));
//   RegisterHistCollection( new ElectronHists("ElectronsbTagSel"));

//   RegisterHistCollection( new JetHists("JetsJetSel"));
//   RegisterHistCollection( new TopJetHists("TopJetsJetSel"));
//   RegisterHistCollection( new EventHists("EventsJetSel"));
//   RegisterHistCollection( new MuonHists("MuonsJetSel"));
//   RegisterHistCollection( new TauHists("TausJetSel"));
//   RegisterHistCollection( new ElectronHists("ElectronsJetSel"));

  RegisterHistCollection( new JetHists("JetsAntibTagSel"));
  RegisterHistCollection( new TopJetHists("TopJetsAntibTagSel"));
  RegisterHistCollection( new EventHists("EventsAntibTagSel"));
  RegisterHistCollection( new MuonHists("MuonsAntibTagSel"));
  RegisterHistCollection( new TauHists("TausAntibTagSel"));
  RegisterHistCollection( new ElectronHists("ElectronsAntibTagSel"));

  RegisterHistCollection( new JetHists("JetsRealTauSel"));
  RegisterHistCollection( new TopJetHists("TopJetsRealTauSel"));
  RegisterHistCollection( new EventHists("EventsRealTauSel"));
  RegisterHistCollection( new MuonHists("MuonsRealTauSel"));
  RegisterHistCollection( new TauHists("TausRealTauSel"));
  RegisterHistCollection( new ElectronHists("ElectronsRealTauSel"));

  RegisterHistCollection( new JetHists("JetsFakeTauSel"));
  RegisterHistCollection( new TopJetHists("TopJetsFakeTauSel"));
  RegisterHistCollection( new EventHists("EventsFakeTauSel"));
  RegisterHistCollection( new MuonHists("MuonsFakeTauSel"));
  RegisterHistCollection( new TauHists("TausFakeTauSel"));
  RegisterHistCollection( new ElectronHists("ElectronsFakeTauSel"));

  RegisterHistCollection( new JetHists("JetsAntibTagSel_MediumTauSel"));
  RegisterHistCollection( new TopJetHists("TopJetsAntibTagSel_MediumTauSel"));
  RegisterHistCollection( new EventHists("EventsAntibTagSel_MediumTauSel"));
  RegisterHistCollection( new MuonHists("MuonsAntibTagSel_MediumTauSel"));
  RegisterHistCollection( new TauHists("TausAntibTagSel_MediumTauSel"));
  RegisterHistCollection( new ElectronHists("ElectronsAntibTagSel_MediumTauSel"));

  RegisterHistCollection( new JetHists("JetsRealTauSel_MediumTauSel"));
  RegisterHistCollection( new TopJetHists("TopJetsRealTauSel_MediumTauSel"));
  RegisterHistCollection( new EventHists("EventsRealTauSel_MediumTauSel"));
  RegisterHistCollection( new MuonHists("MuonsRealTauSel_MediumTauSel"));
  RegisterHistCollection( new TauHists("TausRealTauSel_MediumTauSel"));
  RegisterHistCollection( new ElectronHists("ElectronsRealTauSel_MediumTauSel"));

  RegisterHistCollection( new JetHists("JetsFakeTauSel_MediumTauSel"));
  RegisterHistCollection( new TopJetHists("TopJetsFakeTauSel_MediumTauSel"));
  RegisterHistCollection( new EventHists("EventsFakeTauSel_MediumTauSel"));
  RegisterHistCollection( new MuonHists("MuonsFakeTauSel_MediumTauSel"));
  RegisterHistCollection( new TauHists("TausFakeTauSel_MediumTauSel"));
  RegisterHistCollection( new ElectronHists("ElectronsFakeTauSel_MediumTauSel"));

//   RegisterHistCollection( new JetHists("JetsRealTauSel2"));
//   RegisterHistCollection( new TopJetHists("TopJetsRealTauSel2"));
//   RegisterHistCollection( new EventHists("EventsRealTauSel2"));
//   RegisterHistCollection( new MuonHists("MuonsRealTauSel2"));
//   RegisterHistCollection( new TauHists("TausRealTauSel2"));
//   RegisterHistCollection( new ElectronHists("ElectronsRealTauSel2"));

//   RegisterHistCollection( new JetHists("JetsFakeTauSel2"));
//   RegisterHistCollection( new TopJetHists("TopJetsFakeTauSel2"));
//   RegisterHistCollection( new EventHists("EventsFakeTauSel2"));
//   RegisterHistCollection( new MuonHists("MuonsFakeTauSel2"));
//   RegisterHistCollection( new TauHists("TausFakeTauSel2"));
//   RegisterHistCollection( new ElectronHists("ElectronsFakeTauSel2"));
  // important: initialise histogram collections after their definition
  InitHistos();

  return;  
}



void TauIdCycle::EndInputData( const SInputData& id ) throw( SError ) 
{
  //LumiHandler()->PrintUsedSetup();
  
  AnalysisCycle::EndInputData( id );
  return;
}


void TauIdCycle::BeginInputFile( const SInputData& id ) throw( SError ) 
{
  // Connect all variables from the Ntuple file with the ones needed for the analysis
  // The variables are commonly stored in the BaseCycleContaincer

  // important: call to base function to connect all variables to Ntuples from the input tree
  AnalysisCycle::BeginInputFile( id );
  return;  
}



void TauIdCycle::ExecuteEvent( const SInputData& id, Double_t weight) throw( SError ) 
{ 
  
  // first step: call Execute event of base class to perform basic consistency checks
  // also, the good-run selection is performed there and the calculator is reset
  AnalysisCycle::ExecuteEvent( id, weight);


  //clean collections here 
 

   
  // get the selections
  //static Selection* bTagSel = GetSelection("bTagSel");
  static Selection* JetSel = GetSelection("JetSel");
  
  static Selection* AntibTagSel = GetSelection("AntibTagSel");
  static Selection* InvMassSel = GetSelection("InvMassSel");
  static Selection* RealTauSel = GetSelection("RealTauSel");
  static Selection* TauSelection = GetSelection("TauSelection");
  static Selection* SameSignSel = GetSelection("SameSignSel");
  // get the histogram collections
  // BaseHists* HistsJetsbTagSel = GetHistCollection("JetsbTagSel");
//   BaseHists* HistsTopJetsbTagSel= GetHistCollection("TopJetsbTagSel");
//   BaseHists* HistsEventsbTagSel = GetHistCollection("EventsbTagSel");
//   BaseHists* HistsMuonsbTagSel = GetHistCollection("MuonsbTagSel");
//   BaseHists* HistsTausbTagSel = GetHistCollection("TausbTagSel");
//   BaseHists* HistsElectronsbTagSel = GetHistCollection("ElectronsbTagSel");

//   BaseHists* HistsJetsJetSel = GetHistCollection("JetsJetSel");
//   BaseHists* HistsTopJetsJetSel = GetHistCollection("TopJetsJetSel");
//   BaseHists* HistsEventsJetSel = GetHistCollection("EventsJetSel");
//   BaseHists* HistsMuonsJetSel = GetHistCollection("MuonsJetSel");
//   BaseHists* HistsTausJetSel = GetHistCollection("TausJetSel");
//   BaseHists* HistsElectronsJetSel = GetHistCollection("ElectronsJetSel");

  BaseHists* HistsJetsAntibTagSel = GetHistCollection("JetsAntibTagSel");
  BaseHists* HistsTopJetsAntibTagSel= GetHistCollection("TopJetsAntibTagSel");
  BaseHists* HistsEventsAntibTagSel = GetHistCollection("EventsAntibTagSel");
  BaseHists* HistsMuonsAntibTagSel = GetHistCollection("MuonsAntibTagSel");
  BaseHists* HistsTausAntibTagSel = GetHistCollection("TausAntibTagSel");
  BaseHists* HistsElectronsAntibTagSel = GetHistCollection("ElectronsAntibTagSel");
  
  BaseHists* HistsJetsRealTauSel = GetHistCollection("JetsRealTauSel");
  BaseHists* HistsTopJetsRealTauSel= GetHistCollection("TopJetsRealTauSel");
  BaseHists* HistsEventsRealTauSel = GetHistCollection("EventsRealTauSel");
  BaseHists* HistsMuonsRealTauSel = GetHistCollection("MuonsRealTauSel");
  BaseHists* HistsTausRealTauSel = GetHistCollection("TausRealTauSel");
  BaseHists* HistsElectronsRealTauSel = GetHistCollection("ElectronsRealTauSel");
     
  BaseHists* HistsJetsFakeTauSel = GetHistCollection("JetsFakeTauSel");
  BaseHists* HistsTopJetsFakeTauSel= GetHistCollection("TopJetsFakeTauSel");
  BaseHists* HistsEventsFakeTauSel = GetHistCollection("EventsFakeTauSel");
  BaseHists* HistsMuonsFakeTauSel = GetHistCollection("MuonsFakeTauSel");
  BaseHists* HistsTausFakeTauSel = GetHistCollection("TausFakeTauSel");
  BaseHists* HistsElectronsFakeTauSel = GetHistCollection("ElectronsFakeTauSel");

  BaseHists* HistsJetsAntibTagSel_MediumTauSel = GetHistCollection("JetsAntibTagSel_MediumTauSel");
  BaseHists* HistsTopJetsAntibTagSel_MediumTauSel= GetHistCollection("TopJetsAntibTagSel_MediumTauSel");
  BaseHists* HistsEventsAntibTagSel_MediumTauSel = GetHistCollection("EventsAntibTagSel_MediumTauSel");
  BaseHists* HistsMuonsAntibTagSel_MediumTauSel = GetHistCollection("MuonsAntibTagSel_MediumTauSel");
  BaseHists* HistsTausAntibTagSel_MediumTauSel = GetHistCollection("TausAntibTagSel_MediumTauSel");
  BaseHists* HistsElectronsAntibTagSel_MediumTauSel = GetHistCollection("ElectronsAntibTagSel_MediumTauSel");
  
  BaseHists* HistsJetsRealTauSel_MediumTauSel = GetHistCollection("JetsRealTauSel_MediumTauSel");
  BaseHists* HistsTopJetsRealTauSel_MediumTauSel= GetHistCollection("TopJetsRealTauSel_MediumTauSel");
  BaseHists* HistsEventsRealTauSel_MediumTauSel = GetHistCollection("EventsRealTauSel_MediumTauSel");
  BaseHists* HistsMuonsRealTauSel_MediumTauSel = GetHistCollection("MuonsRealTauSel_MediumTauSel");
  BaseHists* HistsTausRealTauSel_MediumTauSel = GetHistCollection("TausRealTauSel_MediumTauSel");
  BaseHists* HistsElectronsRealTauSel_MediumTauSel = GetHistCollection("ElectronsRealTauSel_MediumTauSel");
     
  BaseHists* HistsJetsFakeTauSel_MediumTauSel = GetHistCollection("JetsFakeTauSel_MediumTauSel");
  BaseHists* HistsTopJetsFakeTauSel_MediumTauSel= GetHistCollection("TopJetsFakeTauSel_MediumTauSel");
  BaseHists* HistsEventsFakeTauSel_MediumTauSel = GetHistCollection("EventsFakeTauSel_MediumTauSel");
  BaseHists* HistsMuonsFakeTauSel_MediumTauSel = GetHistCollection("MuonsFakeTauSel_MediumTauSel");
  BaseHists* HistsTausFakeTauSel_MediumTauSel = GetHistCollection("TausFakeTauSel_MediumTauSel");
  BaseHists* HistsElectronsFakeTauSel_MediumTauSel = GetHistCollection("ElectronsFakeTauSel_MediumTauSel");
     
 //  BaseHists* HistsJetsRealTauSel2 = GetHistCollection("JetsRealTauSel");
//   BaseHists* HistsTopJetsRealTauSel2= GetHistCollection("TopJetsRealTauSel");
//   BaseHists* HistsEventsRealTauSel2 = GetHistCollection("EventsRealTauSel");
//   BaseHists* HistsMuonsRealTauSel2 = GetHistCollection("MuonsRealTauSel");
//   BaseHists* HistsTausRealTauSel2= GetHistCollection("TausRealTauSel");
//   BaseHists* HistsElectronsRealTauSel2 = GetHistCollection("ElectronsRealTauSel");
     
//   BaseHists* HistsJetsFakeTauSel2 = GetHistCollection("JetsFakeTauSel2");
//   BaseHists* HistsTopJetsFakeTauSel2= GetHistCollection("TopJetsFakeTauSel2");
//   BaseHists* HistsEventsFakeTauSel2 = GetHistCollection("EventsFakeTauSel2");
//   BaseHists* HistsMuonsFakeTauSel2 = GetHistCollection("MuonsFakeTauSel2");
//   BaseHists* HistsTausFakeTauSel2 = GetHistCollection("TausFakeTauSel2");
//   BaseHists* HistsElectronsFakeTauSel2 = GetHistCollection("ElectronsFakeTauSel2");
      
  Cleaner cleaner;
  
  EventCalc* calc = EventCalc::Instance();
  BaseCycleContainer* bcc = calc->GetBaseCycleContainer();
  bool IsRealData = calc->IsRealData();

  if (calc ->GetRunNum() == 201191) throw SError( SError::SkipEvent );

  if (bcc->jets) cleaner.JetCleaner(30,2.5,true);
  if (!JetSel->passSelection(bcc))  throw SError( SError::SkipEvent );

  if (!AntibTagSel->passSelection(bcc) && InvMassSel -> passSelection(bcc) ) 
    {
      HistsJetsAntibTagSel -> Fill();
      HistsTopJetsAntibTagSel -> Fill();
      HistsMuonsAntibTagSel -> Fill();
      HistsTausAntibTagSel -> Fill();
      HistsElectronsAntibTagSel   -> Fill();
      HistsEventsAntibTagSel -> Fill();

      if (!IsRealData && RealTauSel->passSelection(bcc))
	{
	  HistsJetsRealTauSel  -> Fill();
	  HistsTopJetsRealTauSel  -> Fill();
	  HistsMuonsRealTauSel  -> Fill();
	  HistsTausRealTauSel  -> Fill();
	  HistsElectronsRealTauSel  -> Fill(); 
	  HistsEventsRealTauSel   -> Fill();
	}
       if (!IsRealData && !RealTauSel->passSelection(bcc))
	{
	  HistsJetsFakeTauSel  -> Fill();
	  HistsTopJetsFakeTauSel  -> Fill();
	  HistsMuonsFakeTauSel  -> Fill();
	  HistsTausFakeTauSel  -> Fill();
	  HistsElectronsFakeTauSel  -> Fill(); 
	  HistsEventsFakeTauSel   -> Fill();
	}
      
    }

  if (bcc-> taus) cleaner.TauCleaner(20, 2.1);
  if (!TauSelection -> passSelection(bcc))  throw SError( SError::SkipEvent );
  if (bcc->jets) cleaner.JetLeptonOverlapRemoval();
  // if (!IsRealData) calc -> ProduceWeight( m_lsf->GetTauWeight()); 
   if (!AntibTagSel->passSelection(bcc) && InvMassSel -> passSelection(bcc) ) 
    {
      HistsJetsAntibTagSel_MediumTauSel -> Fill();
      HistsTopJetsAntibTagSel_MediumTauSel -> Fill();
      HistsMuonsAntibTagSel_MediumTauSel -> Fill();
      HistsTausAntibTagSel_MediumTauSel -> Fill();
      HistsElectronsAntibTagSel_MediumTauSel   -> Fill();
      HistsEventsAntibTagSel_MediumTauSel -> Fill();

      if (!IsRealData && RealTauSel->passSelection(bcc))
	{
	  HistsJetsRealTauSel_MediumTauSel  -> Fill();
	  HistsTopJetsRealTauSel_MediumTauSel  -> Fill();
	  HistsMuonsRealTauSel_MediumTauSel  -> Fill();
	  HistsTausRealTauSel_MediumTauSel  -> Fill();
	  HistsElectronsRealTauSel_MediumTauSel  -> Fill(); 
	  HistsEventsRealTauSel_MediumTauSel   -> Fill();
	}
       if (!IsRealData && !RealTauSel->passSelection(bcc))
	{
	  HistsJetsFakeTauSel_MediumTauSel  -> Fill();
	  HistsTopJetsFakeTauSel_MediumTauSel  -> Fill();
	  HistsMuonsFakeTauSel_MediumTauSel  -> Fill();
	  HistsTausFakeTauSel_MediumTauSel  -> Fill();
	  HistsElectronsFakeTauSel_MediumTauSel  -> Fill(); 
	  HistsEventsFakeTauSel_MediumTauSel  -> Fill();
	}
      
    }

 //  if (!bTagSel->passSelection(bcc))  throw SError( SError::SkipEvent );
  
//   HistsJetsbTagSel -> Fill();
//   HistsTopJetsbTagSel -> Fill();
//   HistsMuonsbTagSel -> Fill();
//   HistsTausbTagSel -> Fill();
//   HistsElectronsbTagSel   -> Fill();
//   HistsEventsbTagSel -> Fill();

//   if (!JetSel->passSelection(bcc))  throw SError( SError::SkipEvent );

//   HistsJetsJetSel -> Fill();
//   HistsTopJetsJetSel -> Fill();
//   HistsMuonsJetSel -> Fill();
//   HistsTausJetSel -> Fill();
//   HistsElectronsJetSel   -> Fill();
//   HistsEventsJetSel -> Fill();

//   if (!IsRealData && RealTauSel->passSelection(bcc))
//     {
//       HistsJetsRealTauSel2  -> Fill();
//       HistsTopJetsRealTauSel2  -> Fill();
//       HistsMuonsRealTauSel2  -> Fill();
//       HistsTausRealTauSel2  -> Fill();
//       HistsElectronsRealTauSel2  -> Fill(); 
//       HistsEventsRealTauSel2   -> Fill();
//     }
//   if (!IsRealData && !RealTauSel->passSelection(bcc))
//     {
//       HistsJetsFakeTauSel2  -> Fill();
//       HistsTopJetsFakeTauSel2  -> Fill();
//       HistsMuonsFakeTauSel2  -> Fill();
//       HistsTausFakeTauSel2  -> Fill();
//       HistsElectronsFakeTauSel2  -> Fill(); 
//       HistsEventsFakeTauSel2   -> Fill();
//     }
  
  return;

}

